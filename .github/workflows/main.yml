name: "Build & Release"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            name: iOS & macOS
            build_commands: |
              flutter build ipa --no-codesign
              flutter build macos --release
              cd build
              tar -czf ios_build.tar.gz ios
              cd macos/Build/Products/Release
              create-dmg --volname "Pukeko Lifts" --window-pos 200 120 --window-size 800 400 --icon-size 100 --icon "pukekolifts_app.app" 200 190 --hide-extension "pukekolifts_app.app" --app-drop-link 600 185 "pukekolifts_app.dmg" "pukekolifts_app.app"
              cd ../../../../..
              mkdir -p release_files
              cp build/ios_build.tar.gz release_files/
              cp build/macos/Build/Products/Release/*.dmg release_files/
            artifacts: |
              release_files/
          - os: windows-latest
            name: Windows
            build_commands: |
              flutter build windows --release
              dir build\windows\x64\runner\Release
              mkdir -p release_files
              # Create a zip file containing the Windows app and its dependencies
              cd build/windows/x64/runner/Release
              Compress-Archive -Path * -DestinationPath ../../../../../release_files/pukekolifts_app_windows.zip
              cd ../../../../../..
            artifacts: |
              release_files/
          - os: ubuntu-latest
            name: Android
            build_commands: |
              flutter build apk --release
              mkdir -p release_files
              cp build/app/outputs/flutter-apk/app-release.apk release_files/
            artifacts: |
              release_files/

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Set Up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'oracle'
        java-version: '17'
    - name: Set Up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
    - name: Install create-dmg
      if: matrix.os == 'macos-latest'
      run: |
        brew install create-dmg
        which create-dmg
    - name: Install Dependencies
      run: flutter pub get
    - name: Build
      run: ${{ matrix.build_commands }}
    - name: List Windows Build Directory
      if: matrix.os == 'windows-latest'
      run: |
        dir build\windows\x64\runner\Release
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}-files
        path: release_files/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release_files
    - name: List downloaded artifacts
      run: |
        echo "Listing all artifacts:"
        ls -R release_files/
    - name: Extract version from pubspec.yaml
      id: extract_version
      run: |
        version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
        timestamp=$(date +'%Y%m%d-%H%M%S')
        echo "VERSION=${version}-${timestamp}" >> $GITHUB_ENV
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release_files/**/*
        tag_name: v${{ env.VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }} 
